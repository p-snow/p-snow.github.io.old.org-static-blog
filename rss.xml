<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<title><![CDATA[.dot life]]></title>
<description><![CDATA[.dot life]]></description>
<link>https://www.p-snow.org/blog</link>
<lastBuildDate>Tue, 26 Dec 2023 11:25:33 +0000</lastBuildDate>
<item>
  <title><![CDATA[How to Write a Blog Post]]></title>
  <description><![CDATA[

<div id="outline-container-org004bbe0" class="outline-2">
<h2 id="org004bbe0">Org-modeは九龍城砦&#xa0;&#xa0;&#xa0;<span class="tag"><span class="org">org</span>&#xa0;<span class="japanese">japanese</span></span></h2>
<div class="outline-text-2" id="text-org004bbe0">
<p>
以下の記事を興味深く読みました。
</p>

<p>
<a href="https://rashita.net/blog/?org-mode%E3%81%A8%E3%81%84%E3%81%86%E4%BC%9D%E7%B5%B1">https://rashita.net/blog/?org-mode%E3%81%A8%E3%81%84%E3%81%86%E4%BC%9D%E7%B5%B1</a>
</p>

<p>
Logseq や Obsidian に org-mode が提供する機能(のいくつか)が取り入れられて、多くのユーザに支持されているようで、個人的には喜ばしいことだなと思っています。(すいません、どちらも使ったことはありません。)この現象をみていると私は、org-modeで提供されているある機能と、それを参考にして実装された他アプリの機能は同じなのか、ということをよく考えます。いや、機能としては確かにほぼ同等だろうとは思います。もちろん優劣の話でもありません。以下に展開してみましょう。
</p>

<p>
org-modeは、確かに出来ることを列挙していくと「重厚な思想に基づいてつくられた巨大なシステム」のように見えますが、その実体は細かいピースの集合体です。そのピースとは何か。それは、ユーザが自由に弄ることのできる設定項目と、設定を反映しながら少し気の利いたことをしてくれるコマンドもしくは関数です。
</p>


<p>
これらのピースは、長い年月をかけてユーザの「こういうのあったらいいよね」を具現化して積み上げられてきました。自由闊達に。昔、誰かがブログでorg-modeを評して、「欲しい機能を好き勝手に入れ込んで積み上げられた九龍城砦のような違法建築」と言っていて、言い得て妙だなと思いました。この表現が適切かは分かりませんが、一定程度は的を射ているとおもいます。
</p>

<p>
<a href="https://www.youtube.com/watch?v=No_vQ8FiQiw">Kowloon walled city 九龍城砦 - YouTube</a>
</p>

<p>
一方でorg-mode全体として整合性をとる必要はもちろんあるので、現メンテナのBastien Guerryの苦労は推して知るべし、かなと思っています。結果としてorg-modeは、細かいところまで設定できる柔軟性をもつ反面、ユーザに一定以上のリテラシを要求するものに仕上がったのだとおもいます。さらに言えば、この複雑な仕様ゆえにMarkdownのように標準化が進まず、結果として他のプラットフォームへの進出が芳しくない状態になっているのではないかと推察します。
</p>

<p>
つまり私がおもうのは、org-modeは、Big Pictureから精緻にデザインされたのではなく、ユーザのニーズに応え続けた「結果」であるということです。我々がorg-modeに抱く「思想」や「システム性」は後付けでしかないのではないか、と。(もちろんEmacsから受け継ぐ、特にテキスト編集における、ある種の「思想」はあります)
</p>

<p>
さて、最初の話に戻りましょう。org-modeの機能の一部を他のアプリが実装することだけを考えれば、それはそれほどむずかしいことではないかもしれません。しかし、org-modeにおける機能と機能の複雑な連携を考慮に入れようとすると、とたんに難易度が爆上がりする気がします。
</p>

<p>
加えて、機能と(キーボードメインの)ユーザ操作が独特のつながりをもつEmacsというプラットフォーム上での「体験」という点を考えれば、やはり両者はベツモノと考えた方がいいのではないか。現時点での私は、今のノートアプリ界隈の流れを見てそんなことを考えています。
</p>
</div>
</div>
<div class="taglist"><a href="https://www.p-snow.org/blog/tags.html">Tags</a>: <a href="https://www.p-snow.org/blog/tag-computers.html">computers</a> <a href="https://www.p-snow.org/blog/tag-emacs.html">emacs</a> <a href="https://www.p-snow.org/blog/tag-blog.html">blog</a> </div>]]></description>
  <category><![CDATA[computers]]></category>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[blog]]></category>
  <link>https://www.p-snow.org/blog/test.html</link>
  <guid>https://www.p-snow.org/blog/test.html</guid>
  <pubDate>Fri, 03 Jul 2020 08:57:00 +0000</pubDate>
</item>
</channel>
</rss>
